<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>做些什么 on Cupper</title>
    <link>https://lilibenli.github.io/</link>
    <description>Recent content in 做些什么 on Cupper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 26 Jun 2017 18:27:58 +0100</lastBuildDate><atom:link href="https://lilibenli.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>命令说明</title>
      <link>https://lilibenli.github.io/%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Tue, 23 May 2023 22:37:05 +0800</pubDate>
      
      <guid>https://lilibenli.github.io/%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</guid>
      <description>新建文章 hugo new post/name.mdpost/name.md，其中post表示的是新建文章在该目录下，一般情况下，我们生成的文章目录都是在post下。如果想要创建日记文件，需要使用hugo new diary/2023-05-23.md。 其次，name.md就是新建文章的名称，主要修改name，后面的.md是文件后缀，不用变化。
文章分类 这里主要介绍文章分类的办法。在文章的开头，自动已经有了tags这个标记，我们可以在其中加上自己想要的分类标签，博客就能自动完成分类了。 例如 tags: [&amp;quot;分类1&amp;quot;,&amp;quot;分类2&amp;quot;]；还有一个比较实用的标记是toc: true，使用这个标记之后，文章会自动生成大纲。
本地预览 hugo server运行此命令，会在开启本地服务，直接访问本机博客，就可以预览到博客了，发现不好的地方可以及时做出修改。
文件生成 hugo -d docs这一步，其实就是把我们写好的文章，转换为静态资源文件，后续就可以直接发布到网站上了。
提交仓库 # 添加全部文件git add *# 添加注释信息，可以把msg替换为当天新增的文件标题，或者说一下自己的心情git commit -m &amp;#34;msg&amp;#34;# 推送到远端服务git push </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://lilibenli.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://lilibenli.github.io/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Learn more and contribute on GitHub.</description>
    </item>
    
  </channel>
</rss>
